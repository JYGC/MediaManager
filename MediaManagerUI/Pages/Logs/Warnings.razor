@page "/logs/warnings"

@using MediaManager.Services
@using MediaManagerUI.Modules.LogBrowser
@using MediaManagerUI.Shared

@inject ILogServices _logServices

<_LogBrowser @bind-LogBrowserModule="_logBrowserModule">
    <TableToolBarContent>
        <MudDateRangePicker @bind-DateRange="_dateRange"
                            DateFormat="yyyy/MM/dd"
                            TitleDateFormat="yyyy/MM/dd"
                            Margin="Margin.Dense"
                            Variant="Variant.Filled"
                            Label="Range"
                            PickerClosed="CallGetResultsAsync" />
    </TableToolBarContent>
</_LogBrowser>

@code {
    private ILogBrowserModule? _logBrowserModule;

    protected override void OnInitialized()
    {
        _logBrowserModule = new WarningLogBrowserModule(_logServices);
        var now = DateTime.Now;
        _dateRange = new DateRange(now.AddMonths(-1), now);
        base.OnInitialized();
    }

    protected override async Task OnParametersSetAsync()
    {
        await CallGetResultsAsync();
        await base.OnParametersSetAsync();
    }

    private DateRange _dateRange = new DateRange();

    private async Task CallGetResultsAsync()
    {
        @if (_logBrowserModule == null || _dateRange.Start == null || _dateRange.End == null)
        {
            return;
        }
        await _logBrowserModule.GetResultsAsync(_dateRange.Start.Value, _dateRange.End.Value);
    }
}
